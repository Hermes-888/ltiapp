Revised 5/13/2016 TJones@uvu.edu

*************************************************************
Canvas Developer Key for mediafiles.uvu.edu 6/3/15
https://docs.google.com/forms/d/1C5vOpWHAAl-cltj2944-NM0w16AiCvKQFJae3euwwM8/viewform

URI: https://mediafiles.uvu.edu

DB on mediafiles.uvu.edu
DB Name: aviationmedia
DB U: mediaadmin P: +8?hooraY3

Current Tools: 
Aviation, UFRA, Nursing and Secondary Ed
business, busmgmt_ce [sponsored]

There is a test tool set up in aviation named /tooltest/
I added a table named testmedia which matches media so it is directed at a different table.
This one can be set up in a development course for testing.

*************************************************************

database tables:
The admins table holds logins for http://mediafiles.uvu.edu/common/mediafilesAdmin/

The consumers table holds
Key/Secret pair and config.xml url -used for the Canvas app install.
department -the tool is used for.
media_table -used by the instance of the tool.
Row 1 is the developer key & secret for mediafiles.uvu.edu and a token to change media items.

The members table holds
username and password for logging into media builder.
email of the main contact. Multiple users can belong to an instance.
media table used by the instance of the tool.

Usually the Instructional Designer for the dept will be using media builder, they need to be added.
This will be their login.

Each tool has a media table which holds
id -the media id for a media item.
course -it is assigned to. Note this is only a filter for sorting.
path -to the media item
type -(html, flash, video)
thumb -file name
date created
active -state default = 1. 0=inactive and wont show in the media list

I've been storing database.sql backups here:
http://mediafiles.uvu.edu/aviation/backups/

*******************************************
All tools exist in the folder /extools/
Each instance of the tool has the department in the name. Example: /mediafiles.uvu.edu/extools/seconded/
In the department folder are these three additional folders.
ltitool/
media/
thumbs/

The ltitool folder holds the tool admin and tool files.
These applications, Media Builder and Media Tool, are explained below.
There is a hidden .htaccess file in this folder that allows large uploads.

The media folder is where new media items are added.
They should be in separate folders designated by course and possibly module.
Example: /media/3050/mod1/

The first media item is always set to 1, the first record of the dept media table, and points to an html file that displays 'Media has not been selected yet'. This file is the index.html file in each media folder.
Example: http://mediafiles.uvu.edu/extools/seconded/media/index.html
The media tool defaults to this media item when it is installed in a course.

A folder named videoplayer includes an html5 video player that is reuable.
Upload an .mp4 video anywhere in the media folder.
In media builder select the videoplayer/h5playvideo.html file
Then select the video and add this to the database.
This media item can now be placed in a course as a graded video assignment using the tool.

The thumbs folder holds thumbnail images generated by media builder as you add new media.
There is a default image that is 220x154 px named logo220x154.jpg
This will be the default thumbnail if no other image is chosen for a media item.
Example: http://mediafiles.uvu.edu/extools/seconded/thumbs/logo220x154.jpg

In media builder the choose file button allows the user to upload an image to use for a thumbnail.
The upload code generates a thumbnail and deletes the original uploaded image.
The user can also select an image in the media folder to generate a thumbnail.

*******************************************
Media Tool Admin has a tabbed interface.
The admin is here:
http://mediafiles.uvu.edu/common/mediafilesAdmin/
Department buttons of existing tools are generated from the consumers table.

Installed Tools: Select a department to view their tool information.
The Key/Secret configuration.xml url and contact emails are displayed.
This can be used to send information to a designer wanting to add the tool to a course.
Add new members to a department.
ToDo:Send this info to contact...email?


View Media: Select a department to list their media items.
The course, path, type, thumbnail and active state are displayed.
Click on the path to open it in a new tab.
Hover on a thumbnail to see it.
Check/uncheck the active state.
Unchecked, active=0, media items will not show up in Media Tool for instructors to select.
The active state does not affect media items seen by a student in a course.


Add New Tool: Generate and install a new tool for a department.
Click the Generate Key/Secret button, Fill in the contact information, Click Save.
The Dept. Name is used to determine the folder the tool will be install in.
Keep it simple. Example: business
Note: The name will become a folder, it will be converted to lowercase and limited to 10 characters. You can use underscores.

The Contact Name, Email and Password is stored in the members table. This will be the designers login for Media Buider.

You can click the Generate button as many times as you like to create new keys/secret pairs.
Unique keys should be used for each tool because the media table is tied to a key.
If the same Key is used for two different tools they will see the same media.

Click Create New Tool.
if successful the save button will be replaced by the status and a link to the new instance of Media Builder.

Click the Send this to Designer button to email the Key/Secret, config url and link to Media Builder to the contact email entered.


Tool Tracking: - To Do Still:
It would be optimal to track the number of depts and the number of courses per dept.
When a tool is added for a dept the consumers table is updated.
When a tool is added to a course, nothing is updated.

Track when an item is added to a course with viewInstructor.php
Track when a media item is viewed or the grade is triggered with viewStudent.php

Look into api calls to get course title /section/ term?

The tracking should count unique courses and depts.

*******************************************
There are two main applicatons in /ltitool/
The Media Tool installed in a Canvas Course named mediatool.php
The admin for the Media Tool named mediabuilder.php

Some basic Media Tool Instructions are located here:
http://mediafiles.uvu.edu/tool_instructions.html
Instructions for the Tool Admin should be built.

*******************************************
Media Tool:
The media tool, mediatool.php, is installed in Canvas at the course level.
When launched it detects if the user is an instructor or a student.

When viewed by an instructor the file named viewInstructor.php displays a tabbed interface.

Design:
The main tab is used to view and select the available media items.
Items can be filtered by the course and viewed as tiled thumbnails.

Click the Confirm Selection button to set the url for an assignment.
The media can be changed if clicked again. This process updates the url.
A confirmation dialog is presented to catch unintentional changes.

Preview:
Displays the currently selected media in an iframe.

Instructions:
This tab displays simple instructions for each tab
and the POST parameters sent from Canvas for this assignment.

When viewed by a student, viewStudent.php displays the selected media in an iframe.
When the media has completed, a message is sent to the tool which calls /blti/gradeMedia.php
gradeMedia sends the grade back to the LMS.

Note: This tool works in both Canvas and Moodle. No other LMS has been tested and is based on the LTI standard.
https://www.imsglobal.org/activity/learning-tools-interoperability

*******************************************
Media Builder instructions:
tooltest version: http://mediafiles.uvu.edu/aviation/tooltest/mediabuilder.php
The username and password is jsacren & js
These u & p records for login are in the members table.
tooltest uses the table named testmedia.


Media builder is the database admin application of each tool installed.
Use it to select assets in the media folder and add them to the database.
Media builder stores the course, path, type, thumbnail name, and a 0 or 1 for active state.
When setup correctly it can only view the media folder it belongs to.
Media tems must be added to the database before the media tool can select them.

Media builder has a tabbed interface.

Build Media:
Select a file in the media folder using the file picker found in the upper left.
You can see the selected file content by clicking the Preview tab.
Select the course it was built for from the dropdown options. This is a filter for sorting.
Select an optional xml or video to add to the main media file path.
Example: a media player with a video:
/aviation/media/reusable/playvideo/playAvideo.html?filename=/aviation/media/1010/mod1/1010-1-1a_introAnimation.f4v
As media is selected the path is displayed above the tabs.

Select a media type. In most cases this will auto select. This is used for sorting.
Select an image to use for the thumbnail. This is used for sorting, visually and the Tiled view in the Media List tab.
If no image is selected, the default logo image is used.

Click the Add to Database button to add an item to the database.

A folder named videoplayer includes an html5 video player that is reuable.
To use it, upload an .mp4 video anywhere in the media folder.
Select the videoplayer/h5playvideo.html file
Then select the video and add this to the database.
This media item can now be placed in a course as a graded video assignment using the Media Tool.

Preview Media:
Once a file has been selected, you can preview it through an iframe.
I sometimes use this tab to get a screen shot to use for the thumbnail image.

Media List:
This tab shows all current media assets in the database.
You can filter the items by course and view the items as tiled thumbnails.
When you select an item in this tab, the screen displays the selected id: #
The media tool url is shown at the top of the screen above the tabs.
Click the Edit Selection button to populate the form and take you to the Build Media tab.
This will allow you to update a media item, if Add to Database is clicked, and see the media in the Preview tab.

Upload Media:
This tab still needs to be built.
Evenually we need to add the ability to upload new media assets from here.

XML Builder:
This tab still needs to be built.
There are several reusable media assets that use xml to define the content.
They are built to use XML files with questions and answer nodes.
Eventually we should build a way to create new xml files for these assets.
Currently I'm working on displaying Canvas Quiz Questions in a reusable.

API Tools:
In the tooltest version of media builder there is another tab with some experimental buttons that execute api calls.


*************************************************************
Media Tool Ideas and Feature Development:

The course dropdown filter is used for sorting media by course within the given dept.
The dropdown was a solution for creating specific filters for the aviation media.
It has no other function than to sort existing media assets when selecting a resource with the tools.
The m_course field is populated by the dropdown option selected.

DONE: Created a way to add Course names to the dropdown <option> list dynamically.
The m_course field populates the dropdown list in both mediabuilder (2 places: Build & List) and instructor view.

Added a button to add a course name to media builder.
Adding a new course name then adding a new media item to the db table will store it in m_course.
When media builder and tool is loaded, the course names filter is generated dynamically from mediadata.items.course

DONE: Added a way for designers to upload media to a specific folder on the server.
New features in media builder, the admin for the Graded Media tool.
-Create new folders in the media folder on the server. Restrict unwanted characters.
-Drag and drop files to upload media to the media folder currently selected. 
-Upload a large zip file and extract it. ( i.e. Storyline project )
-Select an image already on the server to use for the thumbnail of a media item.
This makes it possible for instructional designers to upload their media to the server, select one of the images and add it to the database by themselves.

DONE:
Generate toolurl dynamically to place in hidden viewInstructor form.
mediatool.php
$toolurl  = @( $_SERVER["HTTPS"] != 'on' ) ? 'http://'.$_SERVER["SERVER_NAME"] :  'https://'.$_SERVER["SERVER_NAME"];
$toolurl .= $_SERVER["REQUEST_URI"];

viewInstructor.php
var tmp='<?php echo $toolurl; ?>'.split("?");
var toolurl=tmp[0]; console.log('toolurl:',toolurl);

Generate server, dept dynamically in mediabuilder
var tmp = window.location.href.split("/");
var server=tmp[0]+"//"+tmp[2];
var dept = "/"+tmp[3]+"/"+tmp[4];// only for /extools/... ? not /aviation/tooltest/

Files updated:
mediabuilder.php
mediabuilder.css
mediatool.php
viewInstructor.php
viewStudent.php
js/jqueryFileTree.js
blti/request.php (REMOVED this file contained a static token to update media items)
scripts/logincheck.php (revised comments only)
scripts/loginok.php (UNUSED REMOVED)
scripts/ajax_upload.php
scripts/addMedia.php
scripts/getallmedia.php
scripts/getmediaitem.php
scripts/updatemediaitem.php
scripts/findMedia.php (NEW)
scripts/ddupload.php (NEW)
scripts/authorizetoken.php (NEW)
scripts/changeURL.php (NEW)


Added the config.xml url & media table to the consumers table
These are used in the admin application.

----
DONE:
Currently in mediatool an instructor can change the media initially selected.
This function calls the file /blti/request.php to update the external tool url in canvas.
request.php is using a token I generated.
This function needs to be changed to a dynamic oAuth Token Request.

research:
https://canvas.instructure.com/doc/api/file.oauth.html

http://php.net/manual/en/book.oauth.php

http://www.lornajane.net/posts/2010/Authenticating-with-OAuth-from-PHP
http://www.lornajane.net/posts/2011/php-oauth-provider-request-tokens

// this is were the code I used came from:
http://stackoverflow.com/questions/8902376/php-how-to-get-the-access-token-authenticating-with-oauth-2-0-for-google-api

I Added token to the consumers table row 1 ONLY.
This is used to update the launch url when a media item is changed.
scripts/changeURL.php & authorizetoken.php

If the token becomes invalid for some reason, delete the token in the consumers table.
When a media item is changed and no token exists, media tool will ask to authorize a new token and store it.

----
DONE:
de/re activate a media item in the Tool Admin.
Unchecked, active=0, media items will not show up in Media Tool for instructors to select.
The active state does not affect media items seen by a student.
May need to add a error catch in viewInstructor.php if a previous item was used in a course and the designer goes to that assignment? the code will try to select the non existent item.

----
DONE:
Create a way to determine the media table name for a department,
so it will not have to be edited manually in these four files.
Example: "INSERT INTO deptmedia (m_course, ...
/ltitool/scripts/
  addMedia.php          [used by mediabuilder.php
  getallmedia.php           "
  updatemediaitem.php       "
  getmediaitem.php      [used by viewStudent.php
  
mediatool.php retrieves the secret from the consumers table.
I added the media_table field so it is also returns. 
$table = $context->row["media_table"];
REVISED: see Strange Behavior in Canvas below.

var_dump($context);
Only the row matching the key is returned. Unfortunately the wrong key is being sent.


mediabuilder.php retrieves the table name by matching the url to consumers config_url when it calls findMedia.php.
logincheck does not distinguish which media builder you are logging into.

This new version of the tool is not compatable with the aviation version /aviation/nutool/
Dont forget, nutool has already been installed in canvas courses and should not be moved!


Strange Behavior in Canvas: 5/6/16
email sent to seth & jason
Ticket submitted to support@instructure.com 


In a DEV course, https://uvu.instructure.com/courses/368564
I installed the business tool for testing. It performs correctly.
Then I installed the tooltest tool in the same course. In this tool I display the media table name in the console.

When I create an assignment and select the tooltest tool, the console displays tooltestmedia.
I select the media item and the confirm button. The media is definitely is in the tooltest media folder.

After clicking save, the canvas page refreshes and shows the instructor view.
However the console now displays businessmedia and points to the media for the business tool.

Somehow canvas became confused as to which tool it is using.
I flip to the instructions tab, which displays the POST sent from canvas. 
The oauth key is the business media key.
It should still be the tooltest key.
Canvas is sending the wrong key. The key determines which media table to use.
This is the reason the tool is looking at business media.

The business tool, installed first, doesn’t get confused. 
Only the 2nd, tooltest tool switches keys.


Test 2:
In DEV_Aviation-Course2. Already had AVSC tool.
I installed the tooltest tool first. Then installed the busmgmt tool.
Then created an assignment using the tooltest tool.

After clicking Save the page refreshed and changed to the busmgmt tool.
toolurl: https://mediafiles.uvu.edu/extools/tooltest/ltitool/mediatool.php
TABLE: busmgmt_cemedia
Canvas has selected the busMGMT tool

Test 3:
Uninstall the busmgmt tool and see if tooltest behaves correctly.
Nope. The assignment created using tooltest is now trying to use the key for the Aviation tool that was installed before this test.
The Aviation tool is working normally.

Test 4:
Uninstall the Aviation tool and see if tooltest behaves correctly again.
Yes. tooltest is now using the correct key and finding the correct media table.

Conclusion:
This behavior is on the Canvas side.
It seems to occur when multiple tools from the same provider are installed in a course.
Canvas is using the wrong key.



--
There is a problem when adding multiple instances of this tool to a single course.

Canvas looks up a tool by the url, not the oauth_consumer_key.
When multiple tools are added to a course, canvas will always select the first tool installed from a provider.

Be sure to only install one tool instance to a given course.

Their explanation:
Canvas will look the tool up by domain (not key) and use the settings for the first one it finds. This is why it is launching with the key for the other instance of the tool. According to our engineers, this is working how we would expect; all the tools that I have seen will only have one launch instance (outside of using separate launches for beta and test environments) so it makes much more sense to look the configurations up by matching the launch URL to the first domain it finds.

To me, the best solution is to either install only one instance of the tool per course, 
or wrap the launch into a single tool for people to use content-item and pick the content they want, rather than having multiple instances of the tool. 

If you want to restrict the content that is displayed depending on the context of where the tool is launched (which I can only guess is the use case you are hoping to accomplish), you may be able to build the tool to take in the contextual information from the launch parameters (eg the course ID) to modify the UI that the tool shows.

To add to that, you can add custom launch parameter that may even allow you to know the account ID associated (eg if the course belongs to the business sub-account, show business content) with the course that launched the tool. 

All of our custom launch parameters are specified here: https://github.com/instructure/canvas-lms/blob/stable/lib/lti/variable_expander.rb. 

For example, adding $account_launch_context=Canvas.account.id would send a custom launch parameter arbitrarily called "custom_account_launch_context" with the value of the account ID that the course belongs to. Similarly, the XML could be configured to have the following 
(see https://canvas.instructure.com/doc/api/file.tools_xml.html):

<lticm:options name="custom_fields">
     <lticm:property name="account_launch_context">$Canvas.account.id</lticm:property>
</lticm:options>

Jesse Poulos
Partner Integrations Specialist
Instructure


To retrieve the correct table name
mediatool.php constructs the table name using the launch url
$tmp = explode('/',$_SERVER["REQUEST_URI"]);
$table = $tmp[2].'media';//$context->row["media_table"];
//GET THE MEDIA TABLE FOR student and instructor views

This works for all tools except:
nursing:nusremedia 
aviaiation:media

All other tools use folder+'media' for the media_table

===============
---- To Do Still ---------------------

php 5.6.2  or 7? http://php.net/supported-versions.php

should this be added?
oauth package? https://pecl.php.net/package/oauth
To run http://php.net/manual/en/book.oauth.php

change permissions on var/www/html/ so I can change files
/scripts/addConsumer.php in the root level has been deactivated. This needs to come out of the page.
Redo site: http://mediafiles.uvu.edu/index.html 

instructions for mediabuilder.php in a screencast?

launch_presentation_document_target = iframe (embed?  where is this set from)


Let user change login to their mediabulder and update members table?
Keep it php 7 compatable (no salt): http://php.net/manual/en/function.password-hash.php

Training for media builder should be developed. 5/19 scheduled.

DONE: secure login for Admin Tool [DB admins table]
DONE: Add usage tracking for these tools. Tool Tracking tab 
post in viewInstructor when a media item is added to a course.

----
Create an application to build questions for the reusable media.
Or to pull questions from LMS question bank or quiz?

Would need to alter reusables to recieve the questions if not xml.
Millionaire game has been converted to html5 and can import questions.

JSON/DB/Canvas Quiz? This is probably a separate tool.

----
DONE:
http://mediafiles.uvu.edu/common/mediafilesAdmin/

Created an admin tool to view existing and add new tools
by extracting a template to the /extools/ folder dynamically, ready to install in canvas
Dynamically write the config.xml
Adds the key/secret/dept/ config_url & media_table to consumers table
Adds the contact info to the members table

Has an iterface to view the media tables for each dept 

Has an interface to see which depts already have a tool available.
Admin can retrieve the key/sect and config url for a dept. These are used to add a tool to a course.
Show the Instructional Designer with email contact.
Added a way to re/de activate media items in a departments media table from the admin.

---- 
In Progress:
Add usage tracking for these tools.
It would be optimal to track the number of depts and the number of courses per dept.
When a tool is added for a dept the consumers table is updated.
When a tool is added to a course, nothing is updated.
Could have the designer notify a central admin or periodically ask for course count.
Could update a db table when an item is added with viewInstructor.php
track when a media item is viewed or the grade is triggered with viewStudent.php

Look into api calls to get course title /section/ term?

The tracking should count unique courses and depts.
Think about tracking from the viewStudent.php or viewInstructor.php

viewInstructor:
When media item is added to a course assignment.
Track course name, department, designer

Current usage: 9 tools 18 courses
Aviation : 14 courses
UFRA : 2
Nursing : 1
Secondary Ed : 1
Business, BusMgmt_ce, Sponsored
Ed_Tech
ToolTest for testing new ideas

----
NOTE:
I am not currently setting the context_column in consumers.
The context_id does not distinguish betweens tools, only courses. 
Each tool in a course has the same context_id.

---- 
Add a way to remove a tool?
Only if it has never been installed in a valid course!
This can always be done manually in the database.

----
automated db backup?

----
FFMPEG could be added to re-Encode uploaded videos to a specific format .mp4

----
Experiments have shown the tool can be used to grade different types of media.
So far I have graded StoryLine, webGL, Unity3D, Flash, video and html pages.
The media needs to post a message to the student view which calls the grade media script.

Example:
StoryLine trigger js: var pcnt=window.g_oContentResults.nScore/100;

pcnt={{ calulate percent as a number between 0 to 1 }}

window.parent.postMessage({'score':1},'*');// 1=100% .5=50%
The parent is viewStudent.php and listens for this post, reads the score variable and passes it to gradeMedia.php

----
Friday 6/17/16
All LTI tools suddenly stopped working. Zac updated the Time on mediafiles and fixed the problem.
The timecode is used during the authentication process.

----
Tue 7/12/16
Discovered that mediafiles.uvu.edu only has 6G of space left. 
Ask Zac to add 64G and upgrade to php 5.5
http://php.net/supported-versions.php

This is where the file system sits now. VIRTUAL SERVER
 
Filesystem                         Size  Used      Avail  Use%     Mounted on
/dev/mapper/centos-root            36G   30G       5.9G   84%       /
devtmpfs                           912M    0       912M   0%        /dev
/dev/sda1                          497M  211M      286M   43%       /boot
 
You have about 6 G left on the drive as it sits now. If you want more disk space I can add another drive but it will require a little down time.(need to restart system to recognize the drive and another restart to verify everything working) 
You just need to let me know how big (within reason) and when I can add it. Zac

Request:
Added 100G on 7/18/16
Upgraded to Php 5.5


Usage 7/16:
Jack Rabbit 8.3 G
Federalism 7.1 G
Aviation 5.7 G
UFRA 4.5 G

Need to add pthreads: http://php.net/manual/en/book.pthreads.php

ls -l = show details
ls -a = show hidden

8/19: Email from Seth Generate Key/Secret is not working.

mediafilesAdmin/scripts/keygen.php
requires PHP gmp to generate the key/secret pairs.
$hash = gmp_strval(gmp_init($hash, 16), 62);
Zac, turned it on. Fixed.

Send Info To: button is grabbing the wrong member username/password : Seems to be working ok.
Minor changes to css

